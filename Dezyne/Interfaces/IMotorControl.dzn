interface IMotorControl
{
	in void initialise(); // startup
	in void goForward(); // request to move belt forwards
	in void goBackward(); // request to move belt backwards
	in void stop(); // request belt to stop movement

	behaviour
	{
		enum State {NotReady, Ready};
		enum Direction {Forwards, Backwards, Neutral};
		State state = State.NotReady;
		Direction dir = Direction.Neutral;

		[state.NotReady]
		{
			on initialise: {dir = Direction.Neutral; state = State.Ready;}
			on goForward, goBackward, stop: {}
		}
		[state.Ready]
		{
			on goForward: {dir = Direction.Forwards;}
			on goBackward: {dir = Direction.Backwards;}
			on stop: {dir = Direction.Neutral;}
			on initialise: {}
		}
	}
}

component MotorControl
{
	provides IMotorControl motorControl;
}
