interface ISensor
{
	in void initialise();
	out void detected();

	behaviour
	{
		enum State {Unknown, Low, High};
		State state = State.Unknown;

		[state.Unknown]
		{
			on initialise: state = State.Low;
			on initialise: state = State.High;
		}
		[state.Low]
		{
			on initialise: {}
			on optional: {state = State.High; detected;}
		}
		[state.High]
		{
			on initialise: {}
			on optional: {state = State.Low;}
		}
	}
}

component Sensor
{
	provides ISensor sensor;
}